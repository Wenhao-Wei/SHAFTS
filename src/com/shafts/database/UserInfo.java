package com.shafts.database;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * UserInfo
 * This class is automatically generated by 'sql2java.py'.
 * @author Alex
 */
public class UserInfo implements IConvertableFromResultSet{

	/**
	 * Field for column `id`.
	 */
	public Integer id;

	/**
	 * Field for column `userid`.
	 */
	public String userid;

	/**
	 * Field for column `password`.
	 */
	public String password;

	/**
	 * Field for column `email`.
	 */
	public String email;

	/**
	 * Field for column `unit`.
	 */
	public String unit;

	/**
	 * Field for column `group`.
	 */
	public String group;

	/**
	 * Field for column `phone`.
	 */
	public String phone;

	/**
	 * Field for column `priv`.
	 */
	public String priv;

	/**
	 * Default constructor
	 */
	public UserInfo(){ }

	/**
	 * Data from a ResultSet.
	 * @param rs the ResultSet
	 * @throws SQLException
	 */
	public UserInfo(ResultSet rs) throws SQLException{ 
		this.fromResultSet(rs); 
	}

	/**
	 * Data from arguments.
	 * @param id Value for column `id`
	 * @param userid Value for column `userid`
	 * @param password Value for column `password`
	 * @param email Value for column `email`
	 * @param unit Value for column `unit`
	 * @param group Value for column `group`
	 * @param phone Value for column `phone`
	 * @param priv Value for column `priv`
	 */
	public UserInfo( Integer id, String userid, String password, String email, String unit, String group, String phone, String priv ){
		this.id=id;
		this.userid=userid;
		this.password=password;
		this.email=email;
		this.unit=unit;
		this.group=group;
		this.phone=phone;
		this.priv=priv;
}

	/**
	 * Getter method for field `id`.
	 * @return Value for column `id`
	 */
	public Integer getId(){
		return this.id;
	}
	
	/**
	 * Setter method for field `id`.
	 * @param v Value for column `id`
	 */
	public void setId(Integer v){
		this.id=v;
	}

	/**
	 * Getter method for field `userid`.
	 * @return Value for column `userid`
	 */
	public String getUserid(){
		return this.userid;
	}
	
	/**
	 * Setter method for field `userid`.
	 * @param v Value for column `userid`
	 */
	public void setUserid(String v){
		this.userid=v;
	}

	/**
	 * Getter method for field `password`.
	 * @return Value for column `password`
	 */
	public String getPassword(){
		return this.password;
	}
	
	/**
	 * Setter method for field `password`.
	 * @param v Value for column `password`
	 */
	public void setPassword(String v){
		this.password=v;
	}

	/**
	 * Getter method for field `email`.
	 * @return Value for column `email`
	 */
	public String getEmail(){
		return this.email;
	}
	
	/**
	 * Setter method for field `email`.
	 * @param v Value for column `email`
	 */
	public void setEmail(String v){
		this.email=v;
	}

	/**
	 * Getter method for field `unit`.
	 * @return Value for column `unit`
	 */
	public String getUnit(){
		return this.unit;
	}
	
	/**
	 * Setter method for field `unit`.
	 * @param v Value for column `unit`
	 */
	public void setUnit(String v){
		this.unit=v;
	}

	/**
	 * Getter method for field `group`.
	 * @return Value for column `group`
	 */
	public String getGroup(){
		return this.group;
	}
	
	/**
	 * Setter method for field `group`.
	 * @param v Value for column `group`
	 */
	public void setGroup(String v){
		this.group=v;
	}

	/**
	 * Getter method for field `phone`.
	 * @return Value for column `phone`
	 */
	public String getPhone(){
		return this.phone;
	}
	
	/**
	 * Setter method for field `phone`.
	 * @param v Value for column `phone`
	 */
	public void setPhone(String v){
		this.phone=v;
	}

	/**
	 * Getter method for field `priv`.
	 * @return Value for column `priv`
	 */
	public String getPriv(){
		return this.priv;
	}
	
	/**
	 * Setter method for field `priv`.
	 * @param v Value for column `priv`
	 */
	public void setPriv(String v){
		this.priv=v;
	}

	public void fromResultSet(ResultSet r) throws SQLException{
		this.id=r.getInt(1);
		this.userid=r.getString(2);
		this.password=r.getString(3);
		this.email=r.getString(4);
		this.unit=r.getString(5);
		this.group=r.getString(6);
		this.phone=r.getString(7);
		this.priv=r.getString(8);
	}
}

/*Generator input:
CREATE TABLE `shafts_users` (
  `id` INT UNSIGNED PRIMARY KEY NOT NULL AUTO_INCREMENT,
  `userid` VARCHAR(255) NOT NULL UNIQUE,
  `password` CHAR(32) NOT NULL,
  `email` VARCHAR(255) NOT NULL DEFAULT "",
  `unit` VARCHAR(255) NOT NULL DEFAULT "",
  `group` VARCHAR(255) NOT NULL DEFAULT "",
  `phone` VARCHAR(255) NOT NULL DEFAULT "",
  `priv` VARCHAR(255) NOT NULL DEFAULT ""
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

*/
